apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

ext.versionMajor = 00
ext.versionMinor = 39
ext.versionPatch = 00
ext.versionClassifier = ""
ext.isSnapshot = false
ext.minimumSdkVersion = 17
ext.minimumScreenSize = 1
ext.maximumScreenSize = 4

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "de.netalic.falcon"
        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion 27
        versionCode generateVersionCode()
        versionName generateVersionName()
        flavorDimensions "default"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    sourceSets.test.resources.srcDirs += ["src/test/res"]

    signingConfigs {
        releaseSign {
            def propsFile = rootProject.file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                storeFile = file(props['storeFile'])
                storePassword = props['storePassword']
                keyAlias = props['keyAlias']
                keyPassword = props['keyPassword']
            }
        }
    }

    buildTypes {
        debug {

            minifyEnabled false
            debuggable true
            useProguard false
            testCoverageEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles fileTree('proguard').asList().toArray()

            applicationIdSuffix ".debug"
            resValue "string", "app_name", "falcon-debug"
        }
        release {
            signingConfig signingConfigs.releaseSign
            debuggable false
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android.txt')
            proguardFiles fileTree('proguard').asList().toArray()
            applicationIdSuffix ".release"
            resValue "string", "app_name", "falcon-release"
        }
    }

    productFlavors {

        local {
            buildConfigField "String", "WEB_SERVICE_URL", "\"https://nightly-alpha.carrene.com\""
            buildConfigField "Integer", "WEB_SERVICE_VERSION", "1"
        }
        global {

            buildConfigField "String", "WEB_SERVICE_URL", "\"https://nightly-alpha.carrene.com\""
            buildConfigField "Integer", "WEB_SERVICE_VERSION", "1"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'org.hamcrest:hamcrest-core:1.3'
    }
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 100000000 + ext.minimumScreenSize * 10000000 + ext.maximumScreenSize * 1000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null) {
        if (ext.isSnapshot) {
            ext.versionClassifier = "SNAPSHOT"
        }
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}

dependencies {

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    testImplementation "org.hamcrest:hamcrest-all:1.3"

    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    api 'com.google.guava:guava:26.0-android'

    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'com.github.EhsanMashhadi:helpdroid:0.9.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'
    implementation 'com.braintreepayments.api:drop-in:3.5.0'
    implementation 'com.github.florent37:viewtooltip:1.1.5'
    implementation('com.mikepenz:materialdrawer:5.9.5@aar') {
        transitive = true
        exclude group: 'com.android.support'
    }
    implementation 'info.hoang8f:android-segmented:1.0.6'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'
    implementation 'com.google.zxing:core:3.2.1'
    implementation 'com.journeyapps:zxing-android-embedded:3.3.0@aar'
    implementation 'com.google.firebase:firebase-core:17.0.0'
    implementation 'com.google.firebase:firebase-messaging:19.0.0'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'
    implementation 'com.github.florent37:viewtooltip:1.1.5'
    implementation 'androidx.legacy:legacy-preference-v14:1.0.0'

    implementation 'com.mikhaellopez:circularimageview:3.2.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    implementation 'ru.alexbykov:nopaginate:0.9.9'
    implementation 'jp.wasabeef:recyclerview-animators:2.3.0'
    implementation 'com.journeyapps:zxing-android-embedded:3.3.0@aar'
    implementation 'ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.0.6'

    implementation 'ru.tinkoff.scrollingpagerindicator:scrollingpagerindicator:1.0.6'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'

    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    androidTestImplementation "org.mockito:mockito-core:1.10.19"
    androidTestImplementation 'androidx.test:runner:1.1.0'

    testImplementation('junit:junit:4.12') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testImplementation 'com.squareup.okhttp3:mockwebserver:3.10.0'
    testImplementation("org.mockito:mockito-core:1.10.19")

    testImplementation("org.powermock:powermock-api-mockito:1.6.6") {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    testImplementation('org.powermock:powermock-module-junit4:1.6.6') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }

    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
    implementation 'androidx.test.espresso:espresso-idling-resource:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'

    implementation 'androidx.room:room-runtime:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'

    implementation "com.commonsware.cwac:saferoom:1.0.5"
    api 'com.github.EhsanMashhadi:CountryPicker:0.4.0'
    implementation 'com.android.support:multidex:1.0.3'

}

apply plugin: 'com.google.gms.google-services'
